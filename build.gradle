plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'eclipse'
	id 'groovy'
}

repositories {
	mavenCentral()
	jcenter()
	maven {
		url 'http://oss.sonatype.org/content/repositories/snapshots'
	}
}

// project configuration
sourceCompatibility = '11'
group = 'com.hectorlopezfernandez'
version = '0.0.1-SNAPSHOT'

sourceSets {
	main {
		resources {
			srcDir 'src/main/web'
		}
	}
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jetty'
	implementation 'io.pebbletemplates:pebble-spring-boot-starter:3.1.0'
	implementation 'com.hectorlopezfernandez.pebble:spring-security-extension:2.0.0-SNAPSHOT'
	implementation 'javax.inject:javax.inject:1'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation platform('org.spockframework:spock-bom:2.0-M2-groovy-2.5')
	testImplementation 'org.spockframework:spock-core'
	testImplementation 'org.spockframework:spock-spring'
	testImplementation 'net.bytebuddy:byte-buddy:1.10.8'
	testImplementation 'org.objenesis:objenesis:3.1'
	testImplementation 'cglib:cglib-nodep:3.3.0'
	testImplementation 'de.bwaldvogel:mongo-java-server:1.24.0'
}

test {
	useJUnitPlatform()
}

// local run marker task
task start(dependsOn: bootRun) {
	outputs.upToDateWhen { false }
}


// model class export for toilet-initializer

task modelClassesJar(type: Jar, dependsOn: classes) {
   classifier = 'models'
   from sourceSets.main.output.classesDirs
   includeEmptyDirs false
   include '**/Authority*.class', '**/User*.class', '**/Language*.class', '**/Preferences*.class', '**/Page*.class', '**/Post*.class'
   exclude '**/*Service*.class'
}

artifacts {
   archives modelClassesJar
}
